'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * @file index
                                                                                                                                                                                                                                                                   * @author Cuttle Cong
                                                                                                                                                                                                                                                                   * @date 2018/6/18
                                                                                                                                                                                                                                                                   * @description
                                                                                                                                                                                                                                                                   */

exports.default = createReactI18nLive;
exports.createWrappedI18n = createWrappedI18n;
exports.createWrappedSetLanguage = createWrappedSetLanguage;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Badge = require('./Badge');

var _utils = require('./utils');

var _stringUtils = require('./string-utils');

var _createI18nWrapper = require('./createI18nWrapper');

var _createI18nWrapper2 = _interopRequireDefault(_createI18nWrapper);

var _ghostString = require('./ghost-string');

var _Transaction = require('./Transaction');

var _Transaction2 = _interopRequireDefault(_Transaction);

var _defaultTinyI18n = require('./defaultTinyI18n');

var _defaultTinyI18n2 = _interopRequireDefault(_defaultTinyI18n);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var badge = (0, _utils.createSingleElementView)();
(0, _utils.proxy)(badge, 'open', function (open) {
  return function (props, attributes, mountDom) {
    return open(React.createElement(_Badge.BadgeInner, props), attributes, mountDom);
  };
});

if (module.hot) {
  //
  module.hot.accept(['.', './createI18nWrapper'], function () {
    badge.close();
  });
}

var defaultSetting = {
  enabled: false
};

function createReactI18nLive() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$tinyI18n = _ref.tinyI18n,
      tinyI18n = _ref$tinyI18n === undefined ? _defaultTinyI18n2.default : _ref$tinyI18n,
      transaction = _ref.transaction,
      _ref$createElement = _ref.createElement,
      createElement = _ref$createElement === undefined ? React.createElement : _ref$createElement;

  tinyI18n = _extends({}, tinyI18n);
  if (!(transaction instanceof _Transaction2.default)) {
    transaction = new _Transaction2.default(tinyI18n, transaction);
  }

  var setting = _extends({}, defaultSetting);

  var configure = function configure(config) {
    Object.assign(setting, config);
    if (!setting.enabled) {
      badge.close();
    }
  };

  var overrideTinyI18n = _extends({}, tinyI18n, {
    setLanguage: createWrappedSetLanguage(tinyI18n.setLanguage.bind(tinyI18n), { setting: setting, transaction: transaction }),
    i18n: createWrappedI18n(tinyI18n.i18n.bind(tinyI18n), {
      setting: setting
    })
  });

  return {
    transaction: transaction,
    configure: configure,
    getSetting: function getSetting() {
      return setting;
    },

    originTinyI18n: tinyI18n,
    tinyI18n: overrideTinyI18n,
    createElement: makeWrappedCreateElement(createElement, {
      originTinyI18n: tinyI18n,
      tinyI18n: overrideTinyI18n,
      transaction: transaction,
      setting: setting,
      highlight: true
    })
  };
}

// Overwrites `tinyI18n.i18n` for inject some data.
function createWrappedI18n(i18n) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref2$setting = _ref2.setting,
      setting = _ref2$setting === undefined ? defaultSetting : _ref2$setting;

  return function wrappedI18n(key) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argumentArray = [].slice.call(arguments);

    if (!setting.enabled) {
      return i18n.apply(this, argumentArray);
    }
    var rawTranslated = i18n.apply(this, argumentArray);
    var hideDataString = JSON.stringify([key, args]);
    return (0, _stringUtils.wrapString)(rawTranslated + _createI18nWrapper.RAW_DATA_SEP + (0, _ghostString.encode)(hideDataString), {});
  };
}

function makeWrappedCreateElement(createElement) {
  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      transaction = _ref3.transaction,
      _ref3$setting = _ref3.setting,
      setting = _ref3$setting === undefined ? defaultSetting : _ref3$setting,
      originTinyI18n = _ref3.originTinyI18n,
      tinyI18n = _ref3.tinyI18n,
      _ref3$highlight = _ref3.highlight,
      highlight = _ref3$highlight === undefined ? false : _ref3$highlight;

  var I18nWrapper = (0, _createI18nWrapper2.default)({ badge: badge, originTinyI18n: originTinyI18n, highlight: highlight, transaction: transaction, createElement: createElement, tinyI18n: tinyI18n });
  return function wrappedCreateElement(type, config) {
    for (var _len2 = arguments.length, children = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      children[_key2 - 2] = arguments[_key2];
    }

    if (!setting.enabled) {
      return createElement.apply(this, [type, config].concat(children));
    }

    // html tag
    if (typeof type === 'string') {
      return I18nWrapper({ children: createElement.apply(this, [type, config].concat(children)) });
    }

    return createElement.apply(this, [type, config].concat(children));
  };
}

function createWrappedSetLanguage(setLanguage) {
  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref4$setting = _ref4.setting,
      setting = _ref4$setting === undefined ? defaultSetting : _ref4$setting,
      transaction = _ref4.transaction;

  return function wrappedSetLanguage(language) {
    if (!setting.enabled) {
      return setLanguage.apply(this, arguments);
    }
    transaction.register(language);
    return setLanguage.apply(this, arguments);
  };
}